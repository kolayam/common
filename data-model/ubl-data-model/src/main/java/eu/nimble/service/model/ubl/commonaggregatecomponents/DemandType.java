//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.05.29 at 09:27:16 PM EET 
//


package eu.nimble.service.model.ubl.commonaggregatecomponents;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import eu.nimble.service.model.ubl.commonbasiccomponents.BinaryObjectType;
import eu.nimble.service.model.ubl.commonbasiccomponents.CodeType;
import eu.nimble.service.model.ubl.commonbasiccomponents.TextType;
import org.hibernate.annotations.Cascade;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DemandType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DemandType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}Title" maxOccurs="unbounded"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}Description" maxOccurs="unbounded"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}DueDate"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}ItemClassificationCode" maxOccurs="unbounded"/&gt;
 *         &lt;element name="DeliveryCountry" type="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}CodeType"/&gt;
 *         &lt;element name="BuyerCountry" type="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}CodeType"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}AdditionalDocumentReference"/&gt;
 *         &lt;element name="Image" type="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}BinaryObjectType"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}Certificate" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}Metadata"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DemandType", propOrder = {
    "title",
    "description",
    "dueDate",
    "itemClassificationCode",
    "deliveryCountry",
    "buyerCountry",
    "additionalDocumentReference",
    "image",
    "certificate",
    "metadata"
})
@Entity(name = "DemandType")
@Table(name = "DEMAND_TYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class DemandType
    implements Serializable, Equals
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Title", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    protected List<TextType> title;
    @XmlElement(name = "Description", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    protected List<TextType> description;
    @XmlElement(name = "DueDate", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar dueDate;
    @XmlElement(name = "ItemClassificationCode", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    protected List<CodeType> itemClassificationCode;
    @XmlElement(name = "DeliveryCountry", required = true)
    protected CodeType deliveryCountry;
    @XmlElement(name = "BuyerCountry", required = true)
    protected CodeType buyerCountry;
    @XmlElement(name = "AdditionalDocumentReference", required = true)
    protected DocumentReferenceType additionalDocumentReference;
    @XmlElement(name = "Image", required = true)
    protected BinaryObjectType image;
    @XmlElement(name = "Certificate")
    protected List<CertificateType> certificate;
    @XmlElement(name = "Metadata", required = true)
    protected MetadataType metadata;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the title property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the title property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTitle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = TextType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "TITLE_DEMAND_TYPE_HJID")
    public List<TextType> getTitle() {
        if (title == null) {
            title = new ArrayList<TextType>();
        }
        return this.title;
    }

    /**
     * 
     * 
     */
    public void setTitle(List<TextType> title) {
        this.title = title;
    }

    /**
     * Gets the value of the description property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the description property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDescription().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TextType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = TextType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_DEMAND_TYPE_HJID")
    public List<TextType> getDescription() {
        if (description == null) {
            description = new ArrayList<TextType>();
        }
        return this.description;
    }

    /**
     * 
     * 
     */
    public void setDescription(List<TextType> description) {
        this.description = description;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDueDate(XMLGregorianCalendar value) {
        this.dueDate = value;
    }

    /**
     * Gets the value of the itemClassificationCode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the itemClassificationCode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getItemClassificationCode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = CodeType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "ITEM_CLASSIFICATION_CODE_DEM_0")
    public List<CodeType> getItemClassificationCode() {
        if (itemClassificationCode == null) {
            itemClassificationCode = new ArrayList<CodeType>();
        }
        return this.itemClassificationCode;
    }

    /**
     * 
     * 
     */
    public void setItemClassificationCode(List<CodeType> itemClassificationCode) {
        this.itemClassificationCode = itemClassificationCode;
    }

    /**
     * Gets the value of the deliveryCountry property.
     * 
     * @return
     *     possible object is
     *     {@link CodeType }
     *     
     */
    @ManyToOne(targetEntity = CodeType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "DELIVERY_COUNTRY_DEMAND_TYPE_0")
    public CodeType getDeliveryCountry() {
        return deliveryCountry;
    }

    /**
     * Sets the value of the deliveryCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeType }
     *     
     */
    public void setDeliveryCountry(CodeType value) {
        this.deliveryCountry = value;
    }

    /**
     * Gets the value of the buyerCountry property.
     * 
     * @return
     *     possible object is
     *     {@link CodeType }
     *     
     */
    @ManyToOne(targetEntity = CodeType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "BUYER_COUNTRY_DEMAND_TYPE_HJ_0")
    public CodeType getBuyerCountry() {
        return buyerCountry;
    }

    /**
     * Sets the value of the buyerCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeType }
     *     
     */
    public void setBuyerCountry(CodeType value) {
        this.buyerCountry = value;
    }

    /**
     * Gets the value of the additionalDocumentReference property.
     * 
     * @return
     *     possible object is
     *     {@link DocumentReferenceType }
     *     
     */
    @ManyToOne(targetEntity = DocumentReferenceType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "ADDITIONAL_DOCUMENT_REFERENC_2")
    public DocumentReferenceType getAdditionalDocumentReference() {
        return additionalDocumentReference;
    }

    /**
     * Sets the value of the additionalDocumentReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link DocumentReferenceType }
     *     
     */
    public void setAdditionalDocumentReference(DocumentReferenceType value) {
        this.additionalDocumentReference = value;
    }

    /**
     * Gets the value of the image property.
     * 
     * @return
     *     possible object is
     *     {@link BinaryObjectType }
     *     
     */
    @Cascade({
        org.hibernate.annotations.CascadeType.DELETE_ORPHAN
    })
    @ManyToOne(targetEntity = BinaryObjectType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "IMAGE_DEMAND_TYPE_HJID")
    public BinaryObjectType getImage() {
        return image;
    }

    /**
     * Sets the value of the image property.
     * 
     * @param value
     *     allowed object is
     *     {@link BinaryObjectType }
     *     
     */
    public void setImage(BinaryObjectType value) {
        this.image = value;
    }

    /**
     * Gets the value of the certificate property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the certificate property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCertificate().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CertificateType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = CertificateType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "CERTIFICATE_DEMAND_TYPE_HJID")
    public List<CertificateType> getCertificate() {
        if (certificate == null) {
            certificate = new ArrayList<CertificateType>();
        }
        return this.certificate;
    }

    /**
     * 
     * 
     */
    public void setCertificate(List<CertificateType> certificate) {
        this.certificate = certificate;
    }

    /**
     * Gets the value of the metadata property.
     * 
     * @return
     *     possible object is
     *     {@link MetadataType }
     *     
     */
    @ManyToOne(targetEntity = MetadataType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "METADATA_DEMAND_TYPE_HJID")
    public MetadataType getMetadata() {
        return metadata;
    }

    /**
     * Sets the value of the metadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetadataType }
     *     
     */
    public void setMetadata(MetadataType value) {
        this.metadata = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DemandType that = ((DemandType) object);
        {
            List<TextType> lhsTitle;
            lhsTitle = (((this.title!= null)&&(!this.title.isEmpty()))?this.getTitle():null);
            List<TextType> rhsTitle;
            rhsTitle = (((that.title!= null)&&(!that.title.isEmpty()))?that.getTitle():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        {
            List<TextType> lhsDescription;
            lhsDescription = (((this.description!= null)&&(!this.description.isEmpty()))?this.getDescription():null);
            List<TextType> rhsDescription;
            rhsDescription = (((that.description!= null)&&(!that.description.isEmpty()))?that.getDescription():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDueDate;
            lhsDueDate = this.getDueDate();
            XMLGregorianCalendar rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate)) {
                return false;
            }
        }
        {
            List<CodeType> lhsItemClassificationCode;
            lhsItemClassificationCode = (((this.itemClassificationCode!= null)&&(!this.itemClassificationCode.isEmpty()))?this.getItemClassificationCode():null);
            List<CodeType> rhsItemClassificationCode;
            rhsItemClassificationCode = (((that.itemClassificationCode!= null)&&(!that.itemClassificationCode.isEmpty()))?that.getItemClassificationCode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemClassificationCode", lhsItemClassificationCode), LocatorUtils.property(thatLocator, "itemClassificationCode", rhsItemClassificationCode), lhsItemClassificationCode, rhsItemClassificationCode)) {
                return false;
            }
        }
        {
            CodeType lhsDeliveryCountry;
            lhsDeliveryCountry = this.getDeliveryCountry();
            CodeType rhsDeliveryCountry;
            rhsDeliveryCountry = that.getDeliveryCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deliveryCountry", lhsDeliveryCountry), LocatorUtils.property(thatLocator, "deliveryCountry", rhsDeliveryCountry), lhsDeliveryCountry, rhsDeliveryCountry)) {
                return false;
            }
        }
        {
            CodeType lhsBuyerCountry;
            lhsBuyerCountry = this.getBuyerCountry();
            CodeType rhsBuyerCountry;
            rhsBuyerCountry = that.getBuyerCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "buyerCountry", lhsBuyerCountry), LocatorUtils.property(thatLocator, "buyerCountry", rhsBuyerCountry), lhsBuyerCountry, rhsBuyerCountry)) {
                return false;
            }
        }
        {
            DocumentReferenceType lhsAdditionalDocumentReference;
            lhsAdditionalDocumentReference = this.getAdditionalDocumentReference();
            DocumentReferenceType rhsAdditionalDocumentReference;
            rhsAdditionalDocumentReference = that.getAdditionalDocumentReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalDocumentReference", lhsAdditionalDocumentReference), LocatorUtils.property(thatLocator, "additionalDocumentReference", rhsAdditionalDocumentReference), lhsAdditionalDocumentReference, rhsAdditionalDocumentReference)) {
                return false;
            }
        }
        {
            BinaryObjectType lhsImage;
            lhsImage = this.getImage();
            BinaryObjectType rhsImage;
            rhsImage = that.getImage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "image", lhsImage), LocatorUtils.property(thatLocator, "image", rhsImage), lhsImage, rhsImage)) {
                return false;
            }
        }
        {
            List<CertificateType> lhsCertificate;
            lhsCertificate = (((this.certificate!= null)&&(!this.certificate.isEmpty()))?this.getCertificate():null);
            List<CertificateType> rhsCertificate;
            rhsCertificate = (((that.certificate!= null)&&(!that.certificate.isEmpty()))?that.getCertificate():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "certificate", lhsCertificate), LocatorUtils.property(thatLocator, "certificate", rhsCertificate), lhsCertificate, rhsCertificate)) {
                return false;
            }
        }
        {
            MetadataType lhsMetadata;
            lhsMetadata = this.getMetadata();
            MetadataType rhsMetadata;
            rhsMetadata = that.getMetadata();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "metadata", lhsMetadata), LocatorUtils.property(thatLocator, "metadata", rhsMetadata), lhsMetadata, rhsMetadata)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "DUE_DATE_ITEM")
    @Temporal(TemporalType.DATE)
    public Date getDueDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getDueDate());
    }

    public void setDueDateItem(Date target) {
        setDueDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

}
